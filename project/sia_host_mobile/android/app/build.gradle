plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}


android {
    signingConfigs {
        release {
            Properties properties = new Properties()
            try {
                properties.load(project.rootProject.file('key.properties').newDataInputStream())
                storeFile file(properties.getProperty('storeFile'))
                storePassword properties.getProperty('storePassword')
                keyAlias properties.getProperty('keyAlias')
                keyPassword properties.getProperty('keyPassword')
            } catch (FileNotFoundException e) {
                println "key.properties file not found. Building unsigned APK."
            } catch (Exception e) {
                println "Error reading key.properties: ${e.message}"
            }
       }
    }

    namespace = "com.sia.sia_host_mobile"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.sia.sia_host_mobile"
        minSdk = 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        ndk  {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
        multiDexEnabled= true
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            debuggable = false
            jniDebuggable = false
            renderscriptDebuggable = false
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a'
            }
        }
        debug {
            debuggable = true
            jniDebuggable = true
            renderscriptDebuggable = true
            renderscriptOptimLevel = 4
            signingConfig = signingConfigs.debug
            minifyEnabled = false
            ndk {
                abiFilters 'x86_64', 'x86'
            }
        }
    }
    flavorDimensions "sia_host_mobile_env"
    productFlavors {
        dev {
            dimension = 'sia_host_mobile_env'
            applicationId = 'com.sia.sia_host_mobile'
            applicationIdSuffix = '.dev'
            versionNameSuffix = '-dev'
            resValue 'string', 'app_name', 'Sia Host Mobile Dev'
            signingConfig = signingConfigs.debug
        }
        staging {
            dimension = 'sia_host_mobile_env'
            applicationId = 'com.sia.sia_host_mobile'
            applicationIdSuffix = '.staging'
            versionNameSuffix = '-staging'
            resValue 'string', 'app_name', 'Sia Host Mobile Staging'
            signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        prod {
            dimension = 'sia_host_mobile_env'
            applicationId = 'com.sia.sia_host_mobile'
            resValue 'string', 'app_name', 'Sia Host Mobile'
            signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}
dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.android.support:multidex:1.0.3'
}
